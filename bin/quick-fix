#!/bin/bash
set -euo pipefail

echo "==================================="
echo "TraderX ConfigHub Quick Fix"
echo "==================================="
echo ""
echo "This script will fix the ConfigHub deployment issues by:"
echo "1. Installing a ConfigHub worker"
echo "2. Creating and associating targets"
echo "3. Testing deployment"
echo ""

# Configuration
PROJECT="mellow-muzzle-traderx"
ENV="dev"
SPACE="${PROJECT}-${ENV}"
WORKER_NAME="${PROJECT}-worker-${ENV}"

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Step 1: Check Prerequisites
echo -e "${YELLOW}Checking prerequisites...${NC}"
if ! command -v cub &> /dev/null; then
    echo -e "${RED}Error: cub CLI not found. Please install ConfigHub CLI first.${NC}"
    exit 1
fi

if ! command -v kubectl &> /dev/null; then
    echo -e "${RED}Error: kubectl not found. Please install kubectl first.${NC}"
    exit 1
fi

if ! kubectl cluster-info &> /dev/null; then
    echo -e "${RED}Error: Cannot connect to Kubernetes cluster. Please check your kubeconfig.${NC}"
    exit 1
fi

echo -e "${GREEN}✓ Prerequisites checked${NC}"
echo ""

# Step 2: Create namespace
echo -e "${YELLOW}Step 1: Creating ConfigHub namespace...${NC}"
kubectl create namespace confighub --dry-run=client -o yaml | kubectl apply -f -
kubectl create namespace traderx-dev --dry-run=client -o yaml | kubectl apply -f -
echo -e "${GREEN}✓ Namespaces ready${NC}"
echo ""

# Step 3: Check if worker already exists
echo -e "${YELLOW}Step 2: Checking for existing worker...${NC}"
if cub worker list --space "$SPACE" 2>/dev/null | grep -q "$WORKER_NAME"; then
    echo "Worker already exists, skipping installation"
    WORKER_EXISTS=true
else
    echo "Installing new ConfigHub worker..."
    WORKER_EXISTS=false
fi
echo ""

# Step 4: Install Worker (if needed)
if [ "$WORKER_EXISTS" = false ]; then
    echo -e "${YELLOW}Step 3: Installing ConfigHub worker...${NC}"
    echo "This may take 1-2 minutes..."

    if cub worker install "$WORKER_NAME" \
        --space "$SPACE" \
        --namespace confighub \
        --include-secret \
        --wait \
        --deployment-name "${PROJECT}-worker-${ENV}" 2>&1 | tee /tmp/worker-install.log; then
        echo -e "${GREEN}✓ Worker installed successfully${NC}"
    else
        echo -e "${RED}✗ Worker installation failed. Check /tmp/worker-install.log${NC}"
        exit 1
    fi
else
    echo -e "${YELLOW}Step 3: Using existing worker${NC}"
fi
echo ""

# Step 5: Find or create target
echo -e "${YELLOW}Step 4: Finding target...${NC}"
TARGET=""

# Check if target already exists
EXISTING_TARGET=$(cub target list --space "$SPACE" 2>/dev/null | grep -v "^NAME" | head -1 | awk '{print $1}')
if [ -n "$EXISTING_TARGET" ]; then
    TARGET="$EXISTING_TARGET"
    echo "Found existing target: $TARGET"
else
    # Worker should have created a target, find it
    sleep 5  # Give worker time to register
    TARGET=$(cub target list --space "$SPACE" 2>/dev/null | grep -v "^NAME" | head -1 | awk '{print $1}')

    if [ -z "$TARGET" ]; then
        echo -e "${RED}✗ No target found. Worker may not have initialized properly.${NC}"
        echo "Attempting to create target manually..."

        # Try to create target manually
        if cub target create "${WORKER_NAME}-target" \
            --space "$SPACE" \
            --provider-type kubernetes \
            --worker "$WORKER_NAME" 2>&1; then
            TARGET="${WORKER_NAME}-target"
            echo -e "${GREEN}✓ Target created: $TARGET${NC}"
        else
            echo -e "${RED}✗ Failed to create target${NC}"
            exit 1
        fi
    else
        echo -e "${GREEN}✓ Target found: $TARGET${NC}"
    fi
fi

# Save target for other scripts
echo "$TARGET" > ".cub-target-${ENV}"
echo ""

# Step 6: Associate Units with Target
echo -e "${YELLOW}Step 5: Associating units with target...${NC}"
echo "Target: $TARGET"
echo "Space: $SPACE"

# Associate all units
if cub unit set-target "$TARGET" \
    --space "$SPACE" \
    --where "Slug LIKE '%'" 2>&1; then
    echo -e "${GREEN}✓ Units associated with target${NC}"
else
    echo -e "${YELLOW}⚠ Some units may not have been associated${NC}"
fi
echo ""

# Step 7: Verify association
echo -e "${YELLOW}Step 6: Verifying unit associations...${NC}"
ASSOCIATED=$(cub unit list --space "$SPACE" 2>/dev/null | grep -c "$TARGET" || echo "0")
TOTAL=$(cub unit list --space "$SPACE" 2>/dev/null | grep -c "^[a-z]" || echo "0")
echo "Units associated: $ASSOCIATED / $TOTAL"

if [ "$ASSOCIATED" -eq 0 ]; then
    echo -e "${RED}✗ No units associated with target!${NC}"
    echo "Trying individual association for namespace unit..."

    if cub unit set-target namespace "$TARGET" --space "$SPACE" 2>&1; then
        echo -e "${GREEN}✓ Namespace unit associated${NC}"
    fi
fi
echo ""

# Step 8: Test with namespace deployment
echo -e "${YELLOW}Step 7: Testing deployment with namespace...${NC}"
if cub unit apply namespace --space "$SPACE" 2>&1; then
    echo -e "${GREEN}✓ Namespace apply command succeeded${NC}"

    # Check if namespace was created
    sleep 5
    if kubectl get namespace traderx-dev &>/dev/null; then
        echo -e "${GREEN}✓ Namespace 'traderx-dev' created successfully!${NC}"
    else
        echo -e "${YELLOW}⚠ Namespace not yet visible, may need more time${NC}"
    fi
else
    echo -e "${RED}✗ Failed to apply namespace unit${NC}"
    echo "This might be due to template variables in the YAML"
fi
echo ""

# Step 9: Summary and Next Steps
echo "==================================="
echo "Quick Fix Summary"
echo "==================================="
echo ""

if [ "$ASSOCIATED" -gt 0 ] || kubectl get namespace traderx-dev &>/dev/null 2>&1; then
    echo -e "${GREEN}✅ Fix Successfully Applied!${NC}"
    echo ""
    echo "Next steps:"
    echo "1. Fix template variables in YAML files:"
    echo "   sed -i 's/{{ .*/traderx-dev/' confighub/base/*.yaml"
    echo ""
    echo "2. Update units with fixed YAML:"
    echo "   for f in confighub/base/*.yaml; do"
    echo "     unit=\$(basename \$f .yaml)"
    echo "     cub unit update \$unit --space $SPACE --data-file \$f"
    echo "   done"
    echo ""
    echo "3. Deploy all services:"
    echo "   ./bin/ordered-apply dev"
    echo ""
    echo "Worker status:"
    kubectl get pods -n confighub | grep worker || echo "No worker pods found"
else
    echo -e "${RED}⚠ Partial Success${NC}"
    echo ""
    echo "The worker and target are configured, but deployment may need additional fixes."
    echo "Check the following:"
    echo "1. Template variables in YAML files"
    echo "2. Worker pod status: kubectl get pods -n confighub"
    echo "3. Worker logs: kubectl logs -n confighub -l app=confighub-worker"
fi

echo ""
echo "Useful commands:"
echo "- Check worker: cub worker list --space $SPACE"
echo "- Check target: cub target list --space $SPACE"
echo "- Check units: cub unit list --space $SPACE"
echo "- Worker logs: kubectl logs -n confighub -l deployment=${PROJECT}-worker-${ENV}"