cub-test-framework.sh loaded successfully

╔════════════════════════════════════════════════════════════╗
║         ConfigHub cub CLI Command Analyzer                ║
╚════════════════════════════════════════════════════════════╝

Scanning directory: bin/


==============================================================
Analyzing: bin/proj
==============================================================

==============================================================
Analyzing: bin/validate-deployment
==============================================================

==========================================
FILE: bin/validate-deployment
LINE 86: cub space get "$SPACE" &>/dev/null; then
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Retrieves information about space '"$SPACE"'
    Pre-condition: Space '"$SPACE"' exists
    Post-condition: Space information returned

------------------------------------------

==========================================
FILE: bin/validate-deployment
LINE 103: cub unit list --space "$SPACE" --format json 2>/dev/null | jq length)
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Lists all units in space ''
    Pre-condition: Space '' exists
    Post-condition: List of units returned

------------------------------------------

==========================================
FILE: bin/validate-deployment
LINE 310: cub unit get-live-state "${service}-deployment" --space "$SPACE" &>/dev/null; then
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'get-live-state' operation on unit '"${service}-deployment"' in space ''

------------------------------------------

==============================================================
Analyzing: bin/apply-with-links
==============================================================

==========================================
FILE: bin/apply-with-links
LINE 26: cub space get "$SPACE" >/dev/null 2>&1; then
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Retrieves information about space '"$SPACE"'
    Pre-condition: Space '"$SPACE"' exists
    Post-condition: Space information returned

------------------------------------------

==========================================
FILE: bin/apply-with-links
LINE 34: cub link list --space "$SPACE" --format json 2>/dev/null | jq '. | length' || echo "0")
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'list' operation on links

------------------------------------------

==========================================
FILE: bin/apply-with-links
LINE 48: cub target list --space "$SPACE" --format json 2>/dev/null | jq -r '.[0].Slug' || echo "")
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'list' operation on target ''

------------------------------------------

==========================================
FILE: bin/apply-with-links
LINE 61: cub target update --space "$SPACE" --patch --target "$TARGET_SLUG" --from-stdin
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'update' operation on target ''

------------------------------------------

==========================================
FILE: bin/apply-with-links
LINE 70: cub unit apply --space "$SPACE"  --where "Labels.Component IN ('data', 'service', 'frontend', 'namespace', 'ingress')"  --timeout 15m
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [WARN] WHERE flag present but no clause extracted

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Applies unit '' to target infrastructure in space ''
    Pre-condition: Unit '' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

------------------------------------------

==========================================
FILE: bin/apply-with-links
LINE 85: cub link list --space $SPACE --format json | jq -r '.[] | \"\\(.FromUnitSlug) → \\(.ToUnitSlug)\"'"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'list' operation on links

------------------------------------------

==============================================================
Analyzing: bin/create-links
==============================================================

==========================================
FILE: bin/create-links
LINE 28: cub space get "$SPACE" >/dev/null 2>&1; then
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Retrieves information about space '"$SPACE"'
    Pre-condition: Space '"$SPACE"' exists
    Post-condition: Space information returned

------------------------------------------

==========================================
FILE: bin/create-links
LINE 60: cub link create "$link_slug"  "${service}-deployment"  "namespace"  --space "$SPACE"  --label relationship=dependency  --label type=namespace  --label purpose="requires-namespace"  --allow-exists  --json >/dev/null 2>&1 || {
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates links connecting app units to infrastructure units
    Pre-condition: Source and destination units exist
    Post-condition: Units linked, relationships established

------------------------------------------

==========================================
FILE: bin/create-links
LINE 78: cub link create "account-to-db"  "account-service-deployment"  "database-deployment"  --space "$SPACE"  --label relationship=dependency  --label type=database  --label purpose="jdbc-connection"  --allow-exists  --json >/dev/null 2>&1 || echo "    ⚠️  Link may already exist"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates links connecting app units to infrastructure units
    Pre-condition: Source and destination units exist
    Post-condition: Units linked, relationships established

------------------------------------------

==========================================
FILE: bin/create-links
LINE 89: cub link create "position-to-db"  "position-service-deployment"  "database-deployment"  --space "$SPACE"  --label relationship=dependency  --label type=database  --label purpose="jdbc-connection"  --allow-exists  --json >/dev/null 2>&1 || echo "    ⚠️  Link may already exist"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates links connecting app units to infrastructure units
    Pre-condition: Source and destination units exist
    Post-condition: Units linked, relationships established

------------------------------------------

==========================================
FILE: bin/create-links
LINE 104: cub link create "tradeproc-to-db"  "trade-processor-deployment"  "database-deployment"  --space "$SPACE"  --label relationship=dependency  --label type=database  --label purpose="data-access"  --allow-exists  --json >/dev/null 2>&1 || echo "    ⚠️  Link may already exist"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates links connecting app units to infrastructure units
    Pre-condition: Source and destination units exist
    Post-condition: Units linked, relationships established

------------------------------------------

==========================================
FILE: bin/create-links
LINE 115: cub link create "tradeproc-to-feed"  "trade-processor-deployment"  "trade-feed-deployment"  --space "$SPACE"  --label relationship=dependency  --label type=service  --label purpose="api-client"  --allow-exists  --json >/dev/null 2>&1 || echo "    ⚠️  Link may already exist"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates links connecting app units to infrastructure units
    Pre-condition: Source and destination units exist
    Post-condition: Units linked, relationships established

------------------------------------------

==========================================
FILE: bin/create-links
LINE 130: cub link create "tradesvc-to-db"  "trade-service-deployment"  "database-deployment"  --space "$SPACE"  --label relationship=dependency  --label type=database  --label purpose="data-storage"  --allow-exists  --json >/dev/null 2>&1 || echo "    ⚠️  Link may already exist"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates links connecting app units to infrastructure units
    Pre-condition: Source and destination units exist
    Post-condition: Units linked, relationships established

------------------------------------------

==========================================
FILE: bin/create-links
LINE 141: cub link create "tradesvc-to-people"  "trade-service-deployment"  "people-service-deployment"  --space "$SPACE"  --label relationship=dependency  --label type=service  --label purpose="user-lookup"  --allow-exists  --json >/dev/null 2>&1 || echo "    ⚠️  Link may already exist"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates links connecting app units to infrastructure units
    Pre-condition: Source and destination units exist
    Post-condition: Units linked, relationships established

------------------------------------------

==========================================
FILE: bin/create-links
LINE 152: cub link create "tradesvc-to-refdata"  "trade-service-deployment"  "reference-data-deployment"  --space "$SPACE"  --label relationship=dependency  --label type=service  --label purpose="security-data"  --allow-exists  --json >/dev/null 2>&1 || echo "    ⚠️  Link may already exist"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates links connecting app units to infrastructure units
    Pre-condition: Source and destination units exist
    Post-condition: Units linked, relationships established

------------------------------------------

==========================================
FILE: bin/create-links
LINE 163: cub link create "tradesvc-to-feed"  "trade-service-deployment"  "trade-feed-deployment"  --space "$SPACE"  --label relationship=dependency  --label type=service  --label purpose="trade-publishing"  --allow-exists  --json >/dev/null 2>&1 || echo "    ⚠️  Link may already exist"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates links connecting app units to infrastructure units
    Pre-condition: Source and destination units exist
    Post-condition: Units linked, relationships established

------------------------------------------

==========================================
FILE: bin/create-links
LINE 174: cub link create "tradesvc-to-account"  "trade-service-deployment"  "account-service-deployment"  --space "$SPACE"  --label relationship=dependency  --label type=service  --label purpose="account-validation"  --allow-exists  --json >/dev/null 2>&1 || echo "    ⚠️  Link may already exist"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates links connecting app units to infrastructure units
    Pre-condition: Source and destination units exist
    Post-condition: Units linked, relationships established

------------------------------------------

==========================================
FILE: bin/create-links
LINE 189: cub link create "ingress-to-ns"  "ingress"  "namespace"  --space "$SPACE"  --label relationship=dependency  --label type=namespace  --label purpose="requires-namespace"  --allow-exists  --json >/dev/null 2>&1 || echo "    ⚠️  Link may already exist"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates links connecting app units to infrastructure units
    Pre-condition: Source and destination units exist
    Post-condition: Units linked, relationships established

------------------------------------------

==========================================
FILE: bin/create-links
LINE 211: cub link list --space $SPACE"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'list' operation on links

------------------------------------------

==========================================
FILE: bin/create-links
LINE 214: cub link list --space $SPACE --format json | jq -r '.[] | \"\\(.FromUnitSlug) → \\(.ToUnitSlug)\"'"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'list' operation on links

------------------------------------------

==============================================================
Analyzing: bin/deploy-with-links
==============================================================

==========================================
FILE: bin/deploy-with-links
LINE 40: cub space get "$SPACE" >/dev/null 2>&1; then
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Retrieves information about space '"$SPACE"'
    Pre-condition: Space '"$SPACE"' exists
    Post-condition: Space information returned

------------------------------------------

==========================================
FILE: bin/deploy-with-links
LINE 48: cub link list --space "$SPACE" --format json 2>/dev/null | jq 'length' || echo "0")
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'list' operation on links

------------------------------------------

==========================================
FILE: bin/deploy-with-links
LINE 87: cub unit apply --space "$SPACE" --where "*" --wait
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [WARN] WHERE flag present but no clause extracted

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Applies unit '' to target infrastructure in space ''
    Pre-condition: Unit '' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

------------------------------------------

==========================================
FILE: bin/deploy-with-links
LINE 96: cub link list --space $SPACE --format json | jq -r '.[] | \"\\(.FromUnitSlug) → \\(.ToUnitSlug)\"'"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'list' operation on links

------------------------------------------

==========================================
FILE: bin/deploy-with-links
LINE 99: cub unit list --space $SPACE --format json | jq '.[] | {slug: .Slug, needs_upgrade: .UpgradeNeeded, applied: .Applied}'"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Lists all units in space ''
    Pre-condition: Space '' exists
    Post-condition: List of units returned

------------------------------------------

==========================================
FILE: bin/deploy-with-links
LINE 102: cub unit get-live-state <unit-name> --space $SPACE"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'get-live-state' operation on unit '<unit-name>' in space ''

------------------------------------------

==============================================================
Analyzing: bin/promote
==============================================================

==========================================
FILE: bin/promote
LINE 30: cub unit update --patch --upgrade --space $TO_SPACE
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Updates unit '' by propagating changes from upstream (push-upgrade pattern)
    Pre-condition: Unit '' has upstream unit with newer changes
    Post-condition: Unit '' updated to match upstream

------------------------------------------

==========================================
FILE: bin/promote
LINE 35: cub unit diff --space $TO_SPACE"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'diff' operation on unit '' in space ''

------------------------------------------

==========================================
FILE: bin/promote
LINE 39: cub revision list --space $TO_SPACE"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'list' operation on revision ''

------------------------------------------

==============================================================
Analyzing: bin/deploy-by-layer
==============================================================

==========================================
FILE: bin/deploy-by-layer
LINE 29: cub space list | grep -q "$SPACE"; then
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Lists all ConfigHub spaces accessible to the user
    Pre-condition: User is authenticated
    Post-condition: List of spaces returned

------------------------------------------

==========================================
FILE: bin/deploy-by-layer
LINE 36: cub worker list --space $SPACE | grep -c "$PROJECT-worker" || true)
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'list' operation on worker ''

------------------------------------------

==========================================
FILE: bin/deploy-by-layer
LINE 50: cub unit apply --space $SPACE --where "Labels.order = '0'" || {
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [WARN] WHERE flag present but no clause extracted

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Applies unit '' to target infrastructure in space ''
    Pre-condition: Unit '' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

------------------------------------------

==========================================
FILE: bin/deploy-by-layer
LINE 65: cub unit apply --space $SPACE --where "Labels.layer = 'data'" || {
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [WARN] WHERE flag present but no clause extracted

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Applies unit '' to target infrastructure in space ''
    Pre-condition: Unit '' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

------------------------------------------

==========================================
FILE: bin/deploy-by-layer
LINE 84: cub unit apply --space $SPACE --where "Labels.layer = 'backend'" || {
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [WARN] WHERE flag present but no clause extracted

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Applies unit '' to target infrastructure in space ''
    Pre-condition: Unit '' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

------------------------------------------

==========================================
FILE: bin/deploy-by-layer
LINE 105: cub unit apply --space $SPACE --where "Labels.layer = 'frontend'" || {
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [WARN] WHERE flag present but no clause extracted

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Applies unit '' to target infrastructure in space ''
    Pre-condition: Unit '' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

------------------------------------------

==============================================================
Analyzing: bin/setup-worker
==============================================================

==========================================
FILE: bin/setup-worker
LINE 40: cub worker list --space $SPACE 2>/dev/null | grep -q $WORKER_NAME; then
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'list' operation on worker ''

------------------------------------------

==========================================
FILE: bin/setup-worker
LINE 44: cub worker create $WORKER_NAME --space $SPACE
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'create' operation on worker '$WORKER_NAME'

------------------------------------------

==========================================
FILE: bin/setup-worker
LINE 50: cub worker install $WORKER_NAME  --namespace confighub  --space $SPACE  --include-secret  --export > /tmp/worker-manifest.yaml
==========================================

SYNTAX VALIDATION:
  [FAIL] Invalid syntax
  Error: Invalid verb 'install' for entity 'worker'. Valid: create get list update delete

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'install' operation on worker '$WORKER_NAME'

------------------------------------------

==========================================
FILE: bin/setup-worker
LINE 64: cub worker list --space $SPACE 2>/dev/null | grep -q "Ready"; then
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'list' operation on worker ''

------------------------------------------

==========================================
FILE: bin/setup-worker
LINE 67: cub worker list --space $SPACE
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'list' operation on worker ''

------------------------------------------

==========================================
FILE: bin/setup-worker
LINE 71: cub worker list --space $SPACE"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'list' operation on worker ''

------------------------------------------

==========================================
FILE: bin/setup-worker
LINE 87: cub unit set-target $TARGET_SLUG --where "Space.Slug = '$SPACE'" --space $SPACE
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [WARN] WHERE flag present but no clause extracted

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'set-target' operation on unit '$TARGET_SLUG' in space ''

------------------------------------------

==============================================================
Analyzing: bin/bulk-update
==============================================================

==========================================
FILE: bin/bulk-update
LINE 64: cub space list | grep -q "$SPACE"; then
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Lists all ConfigHub spaces accessible to the user
    Pre-condition: User is authenticated
    Post-condition: List of spaces returned

------------------------------------------

==========================================
FILE: bin/bulk-update
LINE 79: cub unit list --space $SPACE --format json |  jq -r ".[] | select(.Labels.layer == \"$LAYER\" and (.Slug | contains(\"deployment\"))) | .Slug")
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [WARN] Common errors found:
    - CONTAINS not supported in WHERE clauses

SEMANTIC EXPLANATION:
  Lists all units in space ''
    Pre-condition: Space '' exists
    Post-condition: List of units returned

------------------------------------------

==========================================
FILE: bin/bulk-update
LINE 90: cub unit update $unit --space $SPACE --patch "{\"spec\":{\"replicas\":$VALUE}}" || {
==========================================

SYNTAX VALIDATION:
  [FAIL] Invalid syntax
  Error: --patch requires one of: --from-stdin, --filename, --restore, --upgrade, --merge-source, --label, --delete-gate, --destroy-gate, or --changeset

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [WARN] Common errors found:
    - --patch requires additional flags
    - Inline JSON with --patch is invalid. Use --from-stdin (with pipe) or use 'cub function do' for fine-grained changes

  [INFO] Suggested corrections:
    For monolithic Data update:
      echo '{...}' | cub unit update <unit> --from-stdin --space <space>
    For fine-grained Data update:
      cub function do --space <space> --where "Slug = '<unit>'" set-replicas 3

SEMANTIC EXPLANATION:
  Updates unit '$unit' with patch operation
    Pre-condition: Unit '$unit' exists
    Post-condition: Unit updated based on patch operation

------------------------------------------

==========================================
FILE: bin/bulk-update
LINE 96: cub unit apply $unit --space $SPACE || {
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Applies unit '$unit' to target infrastructure in space ''
    Pre-condition: Unit '$unit' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

------------------------------------------

==========================================
FILE: bin/bulk-update
LINE 126: cub unit list --space $SPACE | grep -E "(Slug|$LAYER)" | head -20
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Lists all units in space ''
    Pre-condition: Space '' exists
    Post-condition: List of units returned

------------------------------------------

==========================================
FILE: bin/bulk-update
LINE 140: cub unit update --patch --where \"Labels.layer = '$LAYER'\" \\"
==========================================

SYNTAX VALIDATION:
  [FAIL] Invalid syntax
  Error: --patch requires one of: --from-stdin, --filename, --restore, --upgrade, --merge-source, --label, --delete-gate, --destroy-gate, or --changeset

GRAMMAR VALIDATION:
  [WARN] WHERE flag present but no clause extracted

COMMON ERRORS:
  [WARN] Common errors found:
    - --patch requires additional flags
    - --space flag required for this command

SEMANTIC EXPLANATION:
  Updates unit '' with patch operation
    Pre-condition: Unit '' exists
    Post-condition: Unit updated based on patch operation

------------------------------------------

==============================================================
Analyzing: bin/install-base
==============================================================

==========================================
FILE: bin/install-base
LINE 10: cub space new-prefix)
==========================================

SYNTAX VALIDATION:
  [FAIL] Invalid syntax
  Error: Invalid verb 'new-prefix)' for entity 'space'. Valid: create get list update delete new-prefix

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'new-prefix)' operation on space ''

------------------------------------------

==========================================
FILE: bin/install-base
LINE 19: cub space create ${project}-base  --label project=$project  --label environment=base || echo "Space ${project}-base already exists"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates a new ConfigHub space named '${project}-base'
    Pre-condition: Space '${project}-base' does not exist
    Post-condition: Space '${project}-base' exists and is accessible

------------------------------------------

==========================================
FILE: bin/install-base
LINE 25: cub space create ${project}-filters  --label project=$project  --label type=filters || echo "Space ${project}-filters already exists"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates a new ConfigHub space named '${project}-filters'
    Pre-condition: Space '${project}-filters' does not exist
    Post-condition: Space '${project}-filters' exists and is accessible

------------------------------------------

==========================================
FILE: bin/install-base
LINE 33: cub filter create all Unit  --space ${project}-filters  --where-field "Space.Labels.project = '$project'"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [WARN] WHERE flag present but no clause extracted

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates a filter named 'all' for querying units with WHERE clause
    Pre-condition: Filter 'all' does not exist
    Post-condition: Filter 'all' exists and can be used to query units

------------------------------------------

==========================================
FILE: bin/install-base
LINE 37: cub filter create frontend Unit  --space ${project}-filters  --where-field "Labels.layer = 'frontend'"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [WARN] WHERE flag present but no clause extracted

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates a filter named 'frontend' for querying units with WHERE clause
    Pre-condition: Filter 'frontend' does not exist
    Post-condition: Filter 'frontend' exists and can be used to query units

------------------------------------------

==========================================
FILE: bin/install-base
LINE 41: cub filter create backend Unit  --space ${project}-filters  --where-field "Labels.layer = 'backend'"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [WARN] WHERE flag present but no clause extracted

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates a filter named 'backend' for querying units with WHERE clause
    Pre-condition: Filter 'backend' does not exist
    Post-condition: Filter 'backend' exists and can be used to query units

------------------------------------------

==========================================
FILE: bin/install-base
LINE 45: cub filter create data Unit  --space ${project}-filters  --where-field "Labels.layer = 'data'"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [WARN] WHERE flag present but no clause extracted

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates a filter named 'data' for querying units with WHERE clause
    Pre-condition: Filter 'data' does not exist
    Post-condition: Filter 'data' exists and can be used to query units

------------------------------------------

==========================================
FILE: bin/install-base
LINE 50: cub filter create core-services Unit  --space ${project}-filters  --where-field "Labels.service IN ('reference-data', 'people-service', 'account-service')"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [WARN] WHERE flag present but no clause extracted

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates a filter named 'core-services' for querying units with WHERE clause
    Pre-condition: Filter 'core-services' does not exist
    Post-condition: Filter 'core-services' exists and can be used to query units

------------------------------------------

==========================================
FILE: bin/install-base
LINE 54: cub filter create trading-services Unit  --space ${project}-filters  --where-field "Labels.service IN ('trade-service', 'trade-processor', 'trade-feed')"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [WARN] WHERE flag present but no clause extracted

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates a filter named 'trading-services' for querying units with WHERE clause
    Pre-condition: Filter 'trading-services' does not exist
    Post-condition: Filter 'trading-services' exists and can be used to query units

------------------------------------------

==========================================
FILE: bin/install-base
LINE 59: cub filter create ordered Unit  --space ${project}-filters  --where-field "Labels.order IN ('0','1','2','3','4','5','6','7','8','9')"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [WARN] WHERE flag present but no clause extracted

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates a filter named 'ordered' for querying units with WHERE clause
    Pre-condition: Filter 'ordered' does not exist
    Post-condition: Filter 'ordered' exists and can be used to query units

------------------------------------------

==========================================
FILE: bin/install-base
LINE 66: cub CLI version)"
==========================================

SYNTAX VALIDATION:
  [FAIL] Invalid syntax
  Error: Invalid entity type: CLI

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'version)"' operation on CLI ''

------------------------------------------

==========================================
FILE: bin/install-base
LINE 83: cub unit create --space ${project}-base  --label type=infra  --label order=0  namespace  confighub/base/namespace.yaml
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates a new configuration unit '' in space ''
    Pre-condition: Space '' exists, unit '' does not exist
    Post-condition: Unit '' exists with provided configuration data

------------------------------------------

==========================================
FILE: bin/install-base
LINE 92: cub unit create --space ${project}-base  --label service=database  --label layer=data  --label order=0  database-deployment  confighub/base/database-deployment.yaml
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates a new configuration unit '' in space ''
    Pre-condition: Space '' exists, unit '' does not exist
    Post-condition: Unit '' exists with provided configuration data

------------------------------------------

==========================================
FILE: bin/install-base
LINE 101: cub unit create --space ${project}-base  --label service=database  --label layer=data  database-service  confighub/base/database-service.yaml
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates a new configuration unit '' in space ''
    Pre-condition: Space '' exists, unit '' does not exist
    Post-condition: Unit '' exists with provided configuration data

------------------------------------------

==========================================
FILE: bin/install-base
LINE 127: cub unit create --space ${project}-base  --label service=$service  --label layer=$layer  --label tech=$tech  --label order=$order  --label port=$port  ${service}-deployment  confighub/base/${service}-deployment.yaml
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates a new configuration unit '' in space ''
    Pre-condition: Space '' exists, unit '' does not exist
    Post-condition: Unit '' exists with provided configuration data

------------------------------------------

==========================================
FILE: bin/install-base
LINE 139: cub unit create --space ${project}-base  --label service=$service  --label layer=$layer  --label port=$port  ${service}-service  confighub/base/${service}-service.yaml
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates a new configuration unit '' in space ''
    Pre-condition: Space '' exists, unit '' does not exist
    Post-condition: Unit '' exists with provided configuration data

------------------------------------------

==========================================
FILE: bin/install-base
LINE 151: cub unit create --space ${project}-base  --label type=infra  --label order=9  ingress  confighub/base/ingress.yaml
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates a new configuration unit '' in space ''
    Pre-condition: Space '' exists, unit '' does not exist
    Post-condition: Unit '' exists with provided configuration data

------------------------------------------

==============================================================
Analyzing: bin/ordered-apply
==============================================================

==========================================
FILE: bin/ordered-apply
LINE 159: cub unit apply namespace --space $SPACE"; then
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Applies unit 'namespace' to target infrastructure in space ''
    Pre-condition: Unit 'namespace' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

------------------------------------------

==========================================
FILE: bin/ordered-apply
LINE 206: cub unit update ${service}-deployment --space $SPACE confighub/base/${service}-deployment.yaml"; then
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Updates configuration data for unit '${service}-deployment' in space '' (monolithic)
    Pre-condition: Unit '${service}-deployment' exists
    Post-condition: Unit data replaced with new configuration

------------------------------------------

==========================================
FILE: bin/ordered-apply
LINE 213: cub unit apply ${service}-deployment --space $SPACE"; then
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Applies unit '${service}-deployment' to target infrastructure in space ''
    Pre-condition: Unit '${service}-deployment' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

------------------------------------------

==========================================
FILE: bin/ordered-apply
LINE 220: cub unit get ${service}-service --space $SPACE &>/dev/null; then
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Retrieves full configuration for unit '${service}-service' from space ''
    Pre-condition: Unit '${service}-service' exists
    Post-condition: Unit configuration returned

------------------------------------------

==========================================
FILE: bin/ordered-apply
LINE 223: cub unit update ${service}-service --space $SPACE confighub/base/${service}-service.yaml" || true
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Updates configuration data for unit '${service}-service' in space '' (monolithic)
    Pre-condition: Unit '${service}-service' exists
    Post-condition: Unit data replaced with new configuration

------------------------------------------

==========================================
FILE: bin/ordered-apply
LINE 227: cub unit apply ${service}-service --space $SPACE"; then
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Applies unit '${service}-service' to target infrastructure in space ''
    Pre-condition: Unit '${service}-service' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

------------------------------------------

==========================================
FILE: bin/ordered-apply
LINE 257: cub unit apply ingress --space $SPACE"; then
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Applies unit 'ingress' to target infrastructure in space ''
    Pre-condition: Unit 'ingress' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

------------------------------------------

==============================================================
Analyzing: bin/quick-fix
==============================================================

==========================================
FILE: bin/quick-fix
LINE 28: cub &> /dev/null; then
==========================================

SYNTAX VALIDATION:
  [FAIL] Invalid syntax
  Error: Invalid entity type: &>

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs '/dev/null;' operation on &> 'then'

------------------------------------------

==========================================
FILE: bin/quick-fix
LINE 29: cub CLI not found. Please install ConfigHub CLI first.${NC}"
==========================================

SYNTAX VALIDATION:
  [FAIL] Invalid syntax
  Error: Invalid entity type: CLI

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'not' operation on CLI 'found.'

------------------------------------------

==========================================
FILE: bin/quick-fix
LINE 55: cub worker list --space "$SPACE" 2>/dev/null | grep -q "$WORKER_NAME"; then
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'list' operation on worker ''

------------------------------------------

==========================================
FILE: bin/quick-fix
LINE 69: cub worker install "$WORKER_NAME"  --space "$SPACE"  --namespace confighub  --include-secret  --wait  --deployment-name "${PROJECT}-worker-${ENV}" 2>&1 | tee /tmp/worker-install.log; then
==========================================

SYNTAX VALIDATION:
  [FAIL] Invalid syntax
  Error: Invalid verb 'install' for entity 'worker'. Valid: create get list update delete

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'install' operation on worker '"$WORKER_NAME"'

------------------------------------------

==========================================
FILE: bin/quick-fix
LINE 90: cub target list --space "$SPACE" 2>/dev/null | grep -v "^NAME" | head -1 | awk '{print $1}')
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'list' operation on target ''

------------------------------------------

==========================================
FILE: bin/quick-fix
LINE 97: cub target list --space "$SPACE" 2>/dev/null | grep -v "^NAME" | head -1 | awk '{print $1}')
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'list' operation on target ''

------------------------------------------

==========================================
FILE: bin/quick-fix
LINE 104: cub target create "${WORKER_NAME}-target"  --space "$SPACE"  --provider-type kubernetes  --worker "$WORKER_NAME" 2>&1; then
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'create' operation on target '"${WORKER_NAME}-target"'

------------------------------------------

==========================================
FILE: bin/quick-fix
LINE 129: cub unit set-target "$TARGET"  --space "$SPACE"  --where "Slug LIKE '%'" 2>&1; then
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [WARN] WHERE flag present but no clause extracted

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'set-target' operation on unit '"$TARGET"' in space ''

------------------------------------------

==========================================
FILE: bin/quick-fix
LINE 140: cub unit list --space "$SPACE" 2>/dev/null | grep -c "$TARGET" || echo "0")
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Lists all units in space ''
    Pre-condition: Space '' exists
    Post-condition: List of units returned

------------------------------------------

==========================================
FILE: bin/quick-fix
LINE 141: cub unit list --space "$SPACE" 2>/dev/null | grep -c "^[a-z]" || echo "0")
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Lists all units in space ''
    Pre-condition: Space '' exists
    Post-condition: List of units returned

------------------------------------------

==========================================
FILE: bin/quick-fix
LINE 148: cub unit set-target namespace "$TARGET" --space "$SPACE" 2>&1; then
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'set-target' operation on unit 'namespace' in space ''

------------------------------------------

==========================================
FILE: bin/quick-fix
LINE 156: cub unit apply namespace --space "$SPACE" 2>&1; then
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Applies unit 'namespace' to target infrastructure in space ''
    Pre-condition: Unit 'namespace' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

------------------------------------------

==========================================
FILE: bin/quick-fix
LINE 188: cub unit update \$unit --space $SPACE --data-file \$f"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Updates configuration data for unit '\$unit' in space '' (monolithic)
    Pre-condition: Unit '\$unit' exists
    Post-condition: Unit data replaced with new configuration

------------------------------------------

==========================================
FILE: bin/quick-fix
LINE 208: cub worker list --space $SPACE"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'list' operation on worker ''

------------------------------------------

==========================================
FILE: bin/quick-fix
LINE 209: cub target list --space $SPACE"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'list' operation on target ''

------------------------------------------

==========================================
FILE: bin/quick-fix
LINE 210: cub unit list --space $SPACE"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Lists all units in space ''
    Pre-condition: Space '' exists
    Post-condition: List of units returned

------------------------------------------

==============================================================
Analyzing: bin/install-envs
==============================================================

==========================================
FILE: bin/install-envs
LINE 17: cub space create ${PROJECT}-dev  --label project=$PROJECT  --label environment=dev
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates a new ConfigHub space named '${PROJECT}-dev'
    Pre-condition: Space '${PROJECT}-dev' does not exist
    Post-condition: Space '${PROJECT}-dev' exists and is accessible

------------------------------------------

==========================================
FILE: bin/install-envs
LINE 22: cub unit create --dest-space ${PROJECT}-dev  --space ${PROJECT}-base  --filter ${PROJECT}-filters/all  --label targetable=true  --label environment=dev
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates a new configuration unit '' in space ''
    Pre-condition: Space '' exists, unit '' does not exist
    Post-condition: Unit '' exists with provided configuration data

------------------------------------------

==========================================
FILE: bin/install-envs
LINE 30: cub space create ${PROJECT}-staging  --label project=$PROJECT  --label environment=staging
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates a new ConfigHub space named '${PROJECT}-staging'
    Pre-condition: Space '${PROJECT}-staging' does not exist
    Post-condition: Space '${PROJECT}-staging' exists and is accessible

------------------------------------------

==========================================
FILE: bin/install-envs
LINE 35: cub unit create --dest-space ${PROJECT}-staging  --space ${PROJECT}-dev  --filter ${PROJECT}-filters/all  --label targetable=true  --label environment=staging
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates a new configuration unit '' in space ''
    Pre-condition: Space '' exists, unit '' does not exist
    Post-condition: Unit '' exists with provided configuration data

------------------------------------------

==========================================
FILE: bin/install-envs
LINE 43: cub space create ${PROJECT}-prod  --label project=$PROJECT  --label environment=prod
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates a new ConfigHub space named '${PROJECT}-prod'
    Pre-condition: Space '${PROJECT}-prod' does not exist
    Post-condition: Space '${PROJECT}-prod' exists and is accessible

------------------------------------------

==========================================
FILE: bin/install-envs
LINE 48: cub unit create --dest-space ${PROJECT}-prod  --space ${PROJECT}-staging  --filter ${PROJECT}-filters/all  --label targetable=true  --label environment=prod
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates a new configuration unit '' in space ''
    Pre-condition: Space '' exists, unit '' does not exist
    Post-condition: Unit '' exists with provided configuration data

------------------------------------------

==========================================
FILE: bin/install-envs
LINE 88: cub unit tree --node=space --filter ${PROJECT}-filters/all --space '*'"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'tree' operation on unit '' in space ''

------------------------------------------

==============================================================
Analyzing: bin/apply-all
==============================================================

==========================================
FILE: bin/apply-all
LINE 24: cub target create k8s-${ENV}  --space $SPACE  --type kubernetes  --config "{\"context\": \"$ENV-cluster\", \"namespace\": \"traderx-${ENV}\"}"  || echo "Target already exists"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'create' operation on target 'k8s-${ENV}'

------------------------------------------

==========================================
FILE: bin/apply-all
LINE 34: cub unit list --space $SPACE --format json |  jq -r '.[] | "\(.Labels.order // "99"):\(.Slug)"' |  sort -t: -k1 -n |  cut -d: -f2)
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Lists all units in space ''
    Pre-condition: Space '' exists
    Post-condition: List of units returned

------------------------------------------

==========================================
FILE: bin/apply-all
LINE 47: cub unit apply $unit  --space $SPACE  --target k8s-${ENV}  || echo "  ⚠️  Failed to apply $unit (may already be applied)"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Applies unit '$unit' to target infrastructure in space ''
    Pre-condition: Unit '$unit' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

------------------------------------------

==============================================================
Analyzing: bin/health-check
==============================================================

==========================================
FILE: bin/health-check
LINE 213: cub unit get-live-state "$service-deployment" --space "$SPACE" &>/dev/null; then
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'get-live-state' operation on unit '"$service-deployment"' in space ''

------------------------------------------

==========================================
FILE: bin/health-check
LINE 214: cub unit get-live-state "$service-deployment" --space "$SPACE" 2>/dev/null |  jq -r '.Status // "Unknown"')
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Performs 'get-live-state' operation on unit '"$service-deployment"' in space ''

------------------------------------------

==============================================================
Analyzing: bin/rollback
==============================================================

==========================================
FILE: bin/rollback
LINE 113: cub unit get "$unit" --space "$SPACE" 2>/dev/null |  jq -r '.Revision // 0')
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Retrieves full configuration for unit '"$unit"' from space ''
    Pre-condition: Unit '"$unit"' exists
    Post-condition: Unit configuration returned

------------------------------------------

==========================================
FILE: bin/rollback
LINE 138: cub unit apply "$unit" --space "$SPACE" --revision="$target_rev"; then
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Applies unit '"$unit"' to target infrastructure in space ''
    Pre-condition: Unit '"$unit"' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

------------------------------------------

==============================================================
Analyzing: bin/blue-green-deploy
==============================================================

==========================================
FILE: bin/blue-green-deploy
LINE 155: cub unit create "${SERVICE}-${NEW_COLOR}-deployment"  --space "$SPACE"  --type kubernetes/v1/Deployment  --data-file "confighub/base/${SERVICE}-deployment.yaml"  --label service="$SERVICE"  --label color="$NEW_COLOR"  --label version="$VERSION"  || warn "Unit may already exist"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Creates a new configuration unit '"${SERVICE}-${NEW_COLOR}-deployment"' in space ''
    Pre-condition: Space '' exists, unit '"${SERVICE}-${NEW_COLOR}-deployment"' does not exist
    Post-condition: Unit '"${SERVICE}-${NEW_COLOR}-deployment"' exists with provided configuration data

------------------------------------------

==========================================
FILE: bin/blue-green-deploy
LINE 165: cub unit update "${SERVICE}-${NEW_COLOR}-deployment"  --space "$SPACE"  --patch  --data "{\"spec\":{\"template\":{\"spec\":{\"containers\":[{\"name\":\"$SERVICE\",\"image\":\"finos/traderx-$SERVICE:$VERSION\"}]}}}}"
==========================================

SYNTAX VALIDATION:
  [FAIL] Invalid syntax
  Error: --patch requires one of: --from-stdin, --filename, --restore, --upgrade, --merge-source, --label, --delete-gate, --destroy-gate, or --changeset

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [WARN] Common errors found:
    - --patch requires additional flags

SEMANTIC EXPLANATION:
  Updates unit '"${SERVICE}-${NEW_COLOR}-deployment"' with patch operation
    Pre-condition: Unit '"${SERVICE}-${NEW_COLOR}-deployment"' exists
    Post-condition: Unit updated based on patch operation

------------------------------------------

==========================================
FILE: bin/blue-green-deploy
LINE 171: cub unit apply "${SERVICE}-${NEW_COLOR}-deployment"  --space "$SPACE"  --target "k8s-${ENV}"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Applies unit '"${SERVICE}-${NEW_COLOR}-deployment"' to target infrastructure in space ''
    Pre-condition: Unit '"${SERVICE}-${NEW_COLOR}-deployment"' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

------------------------------------------

==============================================================
Analyzing: bin/test-scripts
==============================================================

==========================================
FILE: bin/test-scripts
LINE 53: cub space new-prefix 2>/dev/null || echo 'fluffy-bunny')"
==========================================

SYNTAX VALIDATION:
  [PASS] Valid syntax

GRAMMAR VALIDATION:
  [N/A] No WHERE clause present

COMMON ERRORS:
  [PASS] No common errors detected

SEMANTIC EXPLANATION:
  Generates a unique space prefix for naming (canonical pattern)
    Pre-condition: User is authenticated
    Post-condition: Returns unique prefix like 'chubby-paws'

------------------------------------------

==============================================================
ANALYSIS SUMMARY
==============================================================
Files analyzed:       18
Commands found:       109
Valid commands:       100
Invalid commands:     9
==============================================================

[WARN] Found 9 invalid command(s). See details above.
