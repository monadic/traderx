apiVersion: apps/v1
kind: Deployment
metadata:
  name: trade-service
  namespace: {{ .Namespace | default "traderx-dev" }}
  labels:
    app: trade-service
    service: trade-service
    layer: backend
    tech: dotnet
    version: {{ .Version | default "latest" }}
  annotations:
    confighub.io/managed: "true"
    confighub.io/critical: "true"
spec:
  replicas: {{ .Replicas | default 1 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: trade-service
  template:
    metadata:
      labels:
        app: trade-service
        service: trade-service
        layer: backend
        tech: dotnet
        version: {{ .Version | default "latest" }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "18092"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: traderx-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: trade-service
        image: finos/traderx-trade-service:{{ .ImageTag | default "latest" }}
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 18092
          protocol: TCP
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: {{ .Environment | title | default "Development" }}
        - name: ASPNETCORE_URLS
          value: "http://+:18092"
        - name: REFERENCE_DATA_URL
          value: "http://reference-data:18085"
        - name: ACCOUNT_SERVICE_URL
          value: "http://account-service:18091"
        - name: POSITION_SERVICE_URL
          value: "http://position-service:18090"
        - name: PEOPLE_SERVICE_URL
          value: "http://people-service:18089"
        # Circuit breaker configuration
        - name: CIRCUIT_BREAKER_ENABLED
          value: "true"
        - name: CIRCUIT_BREAKER_THRESHOLD
          value: "5"
        - name: CIRCUIT_BREAKER_TIMEOUT
          value: "30"
        # Connection pool configuration
        - name: CONNECTION_POOL_SIZE
          value: "50"
        - name: CONNECTION_TIMEOUT
          value: "30"
        livenessProbe:
          httpGet:
            path: /health/live
            port: 18092
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: 18092
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 2
        startupProbe:
          httpGet:
            path: /health/startup
            port: 18092
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 12
        resources:
          requests:
            memory: {{ .ResourceRequestMemory | default "512Mi" }}
            cpu: {{ .ResourceRequestCPU | default "500m" }}
          limits:
            memory: {{ .ResourceLimitMemory | default "1Gi" }}
            cpu: {{ .ResourceLimitCPU | default "1000m" }}
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      restartPolicy: Always