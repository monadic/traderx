apiVersion: apps/v1
kind: Deployment
metadata:
  name: reference-data
  namespace: {{ .Namespace | default "traderx-dev" }}
  labels:
    app: reference-data
    service: reference-data
    layer: data
    tech: java-spring
    version: {{ .Version | default "latest" }}
  annotations:
    confighub.io/managed: "true"
    confighub.io/critical: "true"
spec:
  replicas: {{ .Replicas | default 1 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: reference-data
  template:
    metadata:
      labels:
        app: reference-data
        service: reference-data
        layer: data
        tech: java-spring
        version: {{ .Version | default "latest" }}
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "18085"
        prometheus.io/path: "/actuator/prometheus"
    spec:
      serviceAccountName: traderx-service-account
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: reference-data
        image: finos/traderx-reference-data:{{ .ImageTag | default "latest" }}
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 18085
          protocol: TCP
        - name: management
          containerPort: 8081
          protocol: TCP
        env:
        - name: SPRING_PROFILES_ACTIVE
          value: {{ .Environment | default "dev" }}
        - name: SERVER_PORT
          value: "18085"
        - name: MANAGEMENT_SERVER_PORT
          value: "8081"
        - name: MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE
          value: "health,info,metrics,prometheus"
        # JVM tuning
        - name: JAVA_OPTS
          value: "-Xms256m -Xmx512m -XX:+UseG1GC -XX:MaxGCPauseMillis=100"
        # Database connection pool
        - name: SPRING_DATASOURCE_HIKARI_MAXIMUM_POOL_SIZE
          value: "20"
        - name: SPRING_DATASOURCE_HIKARI_MINIMUM_IDLE
          value: "5"
        - name: SPRING_DATASOURCE_HIKARI_CONNECTION_TIMEOUT
          value: "30000"
        livenessProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /actuator/health/readiness
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 5
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 2
        startupProbe:
          httpGet:
            path: /actuator/health/liveness
            port: 8081
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 18
        resources:
          requests:
            memory: {{ .ResourceRequestMemory | default "256Mi" }}
            cpu: {{ .ResourceRequestCPU | default "250m" }}
          limits:
            memory: {{ .ResourceLimitMemory | default "512Mi" }}
            cpu: {{ .ResourceLimitCPU | default "500m" }}
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: logs
          mountPath: /app/logs
      volumes:
      - name: tmp
        emptyDir: {}
      - name: logs
        emptyDir: {}
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      restartPolicy: Always