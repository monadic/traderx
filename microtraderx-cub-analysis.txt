cub-test-framework.sh loaded successfully

‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó
‚ïë         ConfigHub cub CLI Command Analyzer                ‚ïë
‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù

Scanning directory: /Users/alexis/microtraderx/


‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/test/validate.sh[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

[1mFILE:[0m /Users/alexis/microtraderx/test/validate.sh
[1mLINE 14:[0m cub space get traderx > /dev/null || { echo "‚ùå Space traderx not found"; exit 1; }

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Retrieves information about space 'traderx'
    Pre-condition: Space 'traderx' exists
    Post-condition: Space information returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/validate.sh
[1mLINE 15:[0m cub unit get reference-data --space traderx > /dev/null || { echo "‚ùå Unit reference-data not found"; exit 1; }

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Retrieves full configuration for unit 'reference-data' from space ''
    Pre-condition: Unit 'reference-data' exists
    Post-condition: Unit configuration returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/validate.sh
[1mLINE 22:[0m cub space get traderx-$env > /dev/null || { echo "‚ùå Space traderx-$env not found"; exit 1; }

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Retrieves information about space 'traderx-$env'
    Pre-condition: Space 'traderx-$env' exists
    Post-condition: Space information returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/validate.sh
[1mLINE 23:[0m cub unit get reference-data --space traderx-$env > /dev/null || { echo "‚ùå Unit in traderx-$env not found"; exit 1; }

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Retrieves full configuration for unit 'reference-data' from space ''
    Pre-condition: Unit 'reference-data' exists
    Post-condition: Unit configuration returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/validate.sh
[1mLINE 31:[0m cub space get traderx-prod-$region > /dev/null || { echo "‚ùå Space traderx-prod-$region not found"; exit 1; }

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Retrieves information about space 'traderx-prod-$region'
    Pre-condition: Space 'traderx-prod-$region' exists
    Post-condition: Space information returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/validate.sh
[1mLINE 32:[0m cub unit get trade-service --space traderx-prod-$region > /dev/null || { echo "‚ùå trade-service in $region not found"; exit 1; }

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Retrieves full configuration for unit 'trade-service' from space ''
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit configuration returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/validate.sh
[1mLINE 36:[0m cub unit get trade-service --space traderx-prod-us --output json | jq -r '.data.spec.replicas // 0')

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Retrieves full configuration for unit 'trade-service' from space ''
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit configuration returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/validate.sh
[1mLINE 37:[0m cub unit get trade-service --space traderx-prod-eu --output json | jq -r '.data.spec.replicas // 0')

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Retrieves full configuration for unit 'trade-service' from space ''
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit configuration returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/validate.sh
[1mLINE 38:[0m cub unit get trade-service --space traderx-prod-asia --output json | jq -r '.data.spec.replicas // 0')

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Retrieves full configuration for unit 'trade-service' from space ''
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit configuration returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/validate.sh
[1mLINE 49:[0m cub space get traderx-base > /dev/null || { echo "‚ùå Base space not found"; exit 1; }

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Retrieves information about space 'traderx-base'
    Pre-condition: Space 'traderx-base' exists
    Post-condition: Space information returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/validate.sh
[1mLINE 52:[0m cub unit get trade-service --space traderx-prod-$region --output json)

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Retrieves full configuration for unit 'trade-service' from space ''
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit configuration returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/validate.sh
[1mLINE 64:[0m cub space get traderx-base > /dev/null || { echo "‚ùå Base space not found"; exit 1; }

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Retrieves information about space 'traderx-base'
    Pre-condition: Space 'traderx-base' exists
    Post-condition: Space information returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/validate.sh
[1mLINE 68:[0m cub space get traderx-$env > /dev/null || { echo "‚ùå Space traderx-$env not found"; exit 1; }

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Retrieves information about space 'traderx-$env'
    Pre-condition: Space 'traderx-$env' exists
    Post-condition: Space information returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/validate.sh
[1mLINE 73:[0m cub space get traderx-prod-$region > /dev/null || { echo "‚ùå Space traderx-prod-$region not found"; exit 1; }

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Retrieves information about space 'traderx-prod-$region'
    Pre-condition: Space 'traderx-prod-$region' exists
    Post-condition: Space information returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/test/run-stage-test.sh[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

[1mFILE:[0m /Users/alexis/microtraderx/test/run-stage-test.sh
[1mLINE 48:[0m cub space get "$space" &>/dev/null; then

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Retrieves information about space '"$space"'
    Pre-condition: Space '"$space"' exists
    Post-condition: Space information returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/run-stage-test.sh
[1mLINE 61:[0m cub unit get "$unit" --space "$space" &>/dev/null; then

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Retrieves full configuration for unit '"$unit"' from space ''
    Pre-condition: Unit '"$unit"' exists
    Post-condition: Unit configuration returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/run-stage-test.sh
[1mLINE 75:[0m cub unit get "$unit" --space "$space" --output json 2>/dev/null | jq -r '.data.spec.replicas // 0')

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Retrieves full configuration for unit '"$unit"' from space ''
    Pre-condition: Unit '"$unit"' exists
    Post-condition: Unit configuration returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/run-stage-test.sh
[1mLINE 89:[0m cub unit get "$unit" --space "$space" --output json 2>/dev/null | jq -r '.upstream_unit_id // ""')

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Retrieves full configuration for unit '"$unit"' from space ''
    Pre-condition: Unit '"$unit"' exists
    Post-condition: Unit configuration returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/run-stage-test.sh
[1mLINE 131:[0m cub link list --space "$space" --from "$unit" 2>/dev/null | grep -c "^" || echo "0")

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'list' operation on links

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/run-stage-test.sh
[1mLINE 146:[0m cub unit get "$unit" --space "$space" --output json 2>/dev/null | jq -r '.data.metadata.namespace // ""')

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Retrieves full configuration for unit '"$unit"' from space ''
    Pre-condition: Unit '"$unit"' exists
    Post-condition: Unit configuration returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/run-stage-test.sh
[1mLINE 272:[0m cub unit update trade-service --space ${PREFIX}-traderx-base --patch '{...}'"

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: --patch requires one of: --from-stdin, --filename, --restore, --upgrade, --merge-source, --label, --delete-gate, --destroy-gate, or --changeset[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [1;33m‚ö† Common errors found:[0m
  [1;33m  - --patch requires additional flags[0m
  [1;33m  - Inline JSON with --patch is invalid. Use --from-stdin (with pipe) or use 'cub function do' for fine-grained changes[0m

  [0;34müí° CORRECTION:[0m
    For monolithic Data update:
      echo '{...}' | cub unit update <unit> --from-stdin --space <space>
    For fine-grained Data update:
      cub function do --space <space> --where "Slug = '<unit>'" set-replicas 3

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit 'trade-service' with patch operation
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit updated based on patch operation

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/run-stage-test.sh
[1mLINE 273:[0m cub unit tree --node=space trade-service --space '*'"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'tree' operation on unit '' in space ''

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/run-stage-test.sh
[1mLINE 274:[0m cub unit update --upgrade --patch --space '${PREFIX}-traderx-prod-*'"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit '' by propagating changes from upstream (push-upgrade pattern)
    Pre-condition: Unit '' has upstream unit with newer changes
    Post-condition: Unit '' updated to match upstream

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/run-stage-test.sh
[1mLINE 287:[0m cub unit list --space "*" --where "Slug = 'trade-service'" 2>/dev/null | grep -c "trade-service" || echo "0")

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause found

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Lists all units in space ''
    Pre-condition: Space '' exists
    Post-condition: List of units returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/run-stage-test.sh
[1mLINE 295:[0m cub unit list --space "*" --where "Space.Slug LIKE '%prod%'" 2>/dev/null | grep -c "^" || echo "0")

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause found

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Lists all units in space ''
    Pre-condition: Space '' exists
    Post-condition: List of units returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/run-stage-test.sh
[1mLINE 304:[0m cub unit update --space '*' --where \"Slug = 'trade-service'\" --patch '{\"spec\":{\"replicas\":3}}'"

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: --patch requires one of: --from-stdin, --filename, --restore, --upgrade, --merge-source, --label, --delete-gate, --destroy-gate, or --changeset[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause found

[1mCOMMON ERRORS CHECK:[0m
  [1;33m‚ö† Common errors found:[0m
  [1;33m  - --patch requires additional flags[0m
  [1;33m  - Inline JSON with --patch is invalid. Use --from-stdin (with pipe) or use 'cub function do' for fine-grained changes[0m

  [0;34müí° CORRECTION:[0m
    For monolithic Data update:
      echo '{...}' | cub unit update <unit> --from-stdin --space <space>
    For fine-grained Data update:
      cub function do --space <space> --where "Slug = '<unit>'" set-replicas 3

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit '' with patch operation
    Pre-condition: Unit '' exists
    Post-condition: Unit updated based on patch operation

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/run-stage-test.sh
[1mLINE 305:[0m cub unit list --space '*' --where \"Data CONTAINS 'image:v1'\""

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause found

[1mCOMMON ERRORS CHECK:[0m
  [1;33m‚ö† Common errors found:[0m
  [1;33m  - CONTAINS not supported in WHERE clauses[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Lists all units in space ''
    Pre-condition: Space '' exists
    Post-condition: List of units returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/run-stage-test.sh
[1mLINE 321:[0m cub changeset create market-data-v2"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates changeset 'market-data-v2"' for atomic multi-unit operations
    Pre-condition: Changeset 'market-data-v2"' does not exist
    Post-condition: Changeset exists, units can be locked to it

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/run-stage-test.sh
[1mLINE 322:[0m cub unit update reference-data --space ${PREFIX}-traderx-prod-us --patch '{...}'"

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: --patch requires one of: --from-stdin, --filename, --restore, --upgrade, --merge-source, --label, --delete-gate, --destroy-gate, or --changeset[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [1;33m‚ö† Common errors found:[0m
  [1;33m  - --patch requires additional flags[0m
  [1;33m  - Inline JSON with --patch is invalid. Use --from-stdin (with pipe) or use 'cub function do' for fine-grained changes[0m

  [0;34müí° CORRECTION:[0m
    For monolithic Data update:
      echo '{...}' | cub unit update <unit> --from-stdin --space <space>
    For fine-grained Data update:
      cub function do --space <space> --where "Slug = '<unit>'" set-replicas 3

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit 'reference-data' with patch operation
    Pre-condition: Unit 'reference-data' exists
    Post-condition: Unit updated based on patch operation

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/run-stage-test.sh
[1mLINE 323:[0m cub unit update trade-service --space ${PREFIX}-traderx-prod-us --patch '{...}'"

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: --patch requires one of: --from-stdin, --filename, --restore, --upgrade, --merge-source, --label, --delete-gate, --destroy-gate, or --changeset[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [1;33m‚ö† Common errors found:[0m
  [1;33m  - --patch requires additional flags[0m
  [1;33m  - Inline JSON with --patch is invalid. Use --from-stdin (with pipe) or use 'cub function do' for fine-grained changes[0m

  [0;34müí° CORRECTION:[0m
    For monolithic Data update:
      echo '{...}' | cub unit update <unit> --from-stdin --space <space>
    For fine-grained Data update:
      cub function do --space <space> --where "Slug = '<unit>'" set-replicas 3

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit 'trade-service' with patch operation
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit updated based on patch operation

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/run-stage-test.sh
[1mLINE 324:[0m cub changeset apply market-data-v2"

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid verb 'apply' for entity 'changeset'. Valid: create get list update delete[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'apply' operation on changeset 'market-data-v2"'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/run-stage-test.sh
[1mLINE 351:[0m cub run set-env-var --env-var CIRCUIT_BREAKER=true --unit trade-service --space ${PREFIX}-traderx-prod-eu"

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid entity type: run[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'set-env-var' operation on run ''

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/run-stage-test.sh
[1mLINE 352:[0m cub revision list trade-service --space ${PREFIX}-traderx-prod-eu --limit 3"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'list' operation on revision 'trade-service'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/run-stage-test.sh
[1mLINE 353:[0m cub unit update trade-service --space ${PREFIX}-traderx-prod-asia --merge-unit ${PREFIX}-traderx-prod-eu/trade-service"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates configuration data for unit 'trade-service' in space '' (monolithic)
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit data replaced with new configuration

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/test/preflight-check.sh[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

[1mFILE:[0m /Users/alexis/microtraderx/test/preflight-check.sh
[1mLINE 40:[0m cub &>/dev/null; then

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid entity type: &>/dev/null;[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'then' operation on &>/dev/null; ''

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/preflight-check.sh
[1mLINE 41:[0m cub version 2>/dev/null | grep -oE '[0-9]+\.[0-9]+\.[0-9]+' | head -1 || echo "unknown")

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid entity type: version[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs '2>/dev/null' operation on version '|'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/preflight-check.sh
[1mLINE 42:[0m cub CLI installed (version: $version)"

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid entity type: CLI[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'installed' operation on CLI '(version:'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/preflight-check.sh
[1mLINE 44:[0m cub CLI installed" "Install with: cub upgrade"

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid entity type: CLI[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'installed"' operation on CLI '"Install'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/preflight-check.sh
[1mLINE 66:[0m cub auth status &>/dev/null; then

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid verb 'status' for entity 'auth'. Valid: create get list update delete[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'status' operation on auth '&>/dev/null;'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/preflight-check.sh
[1mLINE 67:[0m cub auth status 2>/dev/null | grep "User:" | awk '{print $2}' || echo "unknown")

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid verb 'status' for entity 'auth'. Valid: create get list update delete[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'status' operation on auth '2>/dev/null'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/preflight-check.sh
[1mLINE 70:[0m cub auth login"

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid verb 'login"' for entity 'auth'. Valid: create get list update delete[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'login"' operation on auth ''

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/preflight-check.sh
[1mLINE 151:[0m cub space list 2>/dev/null | grep -c "^${PREFIX}-traderx" || echo "0")

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Lists all ConfigHub spaces accessible to the user
    Pre-condition: User is authenticated
    Post-condition: List of spaces returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/test/cleanup.sh[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

[1mFILE:[0m /Users/alexis/microtraderx/test/cleanup.sh
[1mLINE 62:[0m cub space list 2>/dev/null | grep "^${PREFIX}-traderx" | awk '{print $1}' || echo "")

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Lists all ConfigHub spaces accessible to the user
    Pre-condition: User is authenticated
    Post-condition: List of spaces returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/cleanup.sh
[1mLINE 69:[0m cub worker list --space "$space" 2>/dev/null | grep -v "^NAME" | awk '{print $1}' || echo "")

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'list' operation on worker ''

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/cleanup.sh
[1mLINE 72:[0m cub worker delete "$worker" --space "$space" 2>/dev/null || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'delete' operation on worker '"$worker"'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/test/cleanup.sh
[1mLINE 76:[0m cub space delete "$space" --recursive 2>/dev/null || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Deletes space '"$space"' and all its contents
    Pre-condition: Space '"$space"' exists
    Post-condition: Space '"$space"' no longer exists

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/setup-structure[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 32:[0m cub space create ${PREFIX}-traderx || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates a new ConfigHub space named '${PREFIX}-traderx'
    Pre-condition: Space '${PREFIX}-traderx' does not exist
    Post-condition: Space '${PREFIX}-traderx' exists and is accessible

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 33:[0m cub unit create --space ${PREFIX}-traderx reference-data k8s/reference-data.yaml || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates a new configuration unit '' in space ''
    Pre-condition: Space '' exists, unit '' does not exist
    Post-condition: Unit '' exists with provided configuration data

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 39:[0m cub space create ${PREFIX}-traderx || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates a new ConfigHub space named '${PREFIX}-traderx'
    Pre-condition: Space '${PREFIX}-traderx' does not exist
    Post-condition: Space '${PREFIX}-traderx' exists and is accessible

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 40:[0m cub unit create --space ${PREFIX}-traderx reference-data k8s/reference-data.yaml || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates a new configuration unit '' in space ''
    Pre-condition: Space '' exists, unit '' does not exist
    Post-condition: Unit '' exists with provided configuration data

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 44:[0m cub space create ${PREFIX}-traderx-$env || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates a new ConfigHub space named '${PREFIX}-traderx-$env'
    Pre-condition: Space '${PREFIX}-traderx-$env' does not exist
    Post-condition: Space '${PREFIX}-traderx-$env' exists and is accessible

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 46:[0m cub unit create reference-data  --space ${PREFIX}-traderx-$env  --upstream-space ${PREFIX}-traderx  --upstream-unit reference-data || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates unit 'reference-data' in space '' with upstream relationship (clone pattern)
    Pre-condition: Space '' exists, upstream unit exists
    Post-condition: Unit 'reference-data' exists in '' with upstream link

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 58:[0m cub space create ${PREFIX}-traderx-base || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates a new ConfigHub space named '${PREFIX}-traderx-base'
    Pre-condition: Space '${PREFIX}-traderx-base' does not exist
    Post-condition: Space '${PREFIX}-traderx-base' exists and is accessible

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 59:[0m cub unit create --space ${PREFIX}-traderx-base reference-data k8s/reference-data.yaml || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates a new configuration unit '' in space ''
    Pre-condition: Space '' exists, unit '' does not exist
    Post-condition: Unit '' exists with provided configuration data

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 60:[0m cub unit create --space ${PREFIX}-traderx-base trade-service k8s/trade-service.yaml || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates a new configuration unit '' in space ''
    Pre-condition: Space '' exists, unit '' does not exist
    Post-condition: Unit '' exists with provided configuration data

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 63:[0m cub space create ${PREFIX}-traderx-infra || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates a new ConfigHub space named '${PREFIX}-traderx-infra'
    Pre-condition: Space '${PREFIX}-traderx-infra' does not exist
    Post-condition: Space '${PREFIX}-traderx-infra' exists and is accessible

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 64:[0m cub unit create --space ${PREFIX}-traderx-infra ns-base k8s/namespace-base.yaml || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates a new configuration unit '' in space ''
    Pre-condition: Space '' exists, unit '' does not exist
    Post-condition: Unit '' exists with provided configuration data

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 69:[0m cub space create ${PREFIX}-traderx-prod-$region || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates a new ConfigHub space named '${PREFIX}-traderx-prod-$region'
    Pre-condition: Space '${PREFIX}-traderx-prod-$region' does not exist
    Post-condition: Space '${PREFIX}-traderx-prod-$region' exists and is accessible

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 72:[0m cub unit create reference-data  --space ${PREFIX}-traderx-prod-$region  --upstream-space ${PREFIX}-traderx-base  --upstream-unit reference-data || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates unit 'reference-data' in space '' with upstream relationship (clone pattern)
    Pre-condition: Space '' exists, upstream unit exists
    Post-condition: Unit 'reference-data' exists in '' with upstream link

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 77:[0m cub unit create trade-service  --space ${PREFIX}-traderx-prod-$region  --upstream-space ${PREFIX}-traderx-base  --upstream-unit trade-service || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates unit 'trade-service' in space '' with upstream relationship (clone pattern)
    Pre-condition: Space '' exists, upstream unit exists
    Post-condition: Unit 'trade-service' exists in '' with upstream link

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 83:[0m cub unit create ns-$region  --space ${PREFIX}-traderx-infra  --upstream-space ${PREFIX}-traderx-infra  --upstream-unit ns-base || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates unit 'ns-$region' in space '' with upstream relationship (clone pattern)
    Pre-condition: Space '' exists, upstream unit exists
    Post-condition: Unit 'ns-$region' exists in '' with upstream link

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 89:[0m cub run set-string-path  --resource-type v1/Namespace  --path metadata.name  --attribute-value ${PREFIX}-traderx-prod-$region  --unit ns-$region  --space ${PREFIX}-traderx-infra  --quiet || true

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid entity type: run[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'set-string-path' operation on run ''

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 99:[0m cub link create --space ${PREFIX}-traderx-prod-$region  --json app-to-ns-ref reference-data ns-$region ${PREFIX}-traderx-infra || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates links connecting app units to infrastructure units
    Pre-condition: Source and destination units exist
    Post-condition: Units linked, relationships established

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 102:[0m cub link create --space ${PREFIX}-traderx-prod-$region  --json app-to-ns-trade trade-service ns-$region ${PREFIX}-traderx-infra || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates links connecting app units to infrastructure units
    Pre-condition: Source and destination units exist
    Post-condition: Units linked, relationships established

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 106:[0m cub link create --space ${PREFIX}-traderx-prod-$region  --json trade-to-ref trade-service reference-data || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates links connecting app units to infrastructure units
    Pre-condition: Source and destination units exist
    Post-condition: Units linked, relationships established

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 112:[0m cub unit update trade-service --space ${PREFIX}-traderx-prod-us  --patch --from-stdin || true  # NYSE hours

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit 'trade-service' with patch operation
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit updated based on patch operation

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 114:[0m cub unit update trade-service --space ${PREFIX}-traderx-prod-eu  --patch --from-stdin || true  # Peak trading

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit 'trade-service' with patch operation
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit updated based on patch operation

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 116:[0m cub unit update trade-service --space ${PREFIX}-traderx-prod-asia  --patch --from-stdin || true  # Overnight

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit 'trade-service' with patch operation
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit updated based on patch operation

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 137:[0m cub space create ${PREFIX}-traderx-base || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates a new ConfigHub space named '${PREFIX}-traderx-base'
    Pre-condition: Space '${PREFIX}-traderx-base' does not exist
    Post-condition: Space '${PREFIX}-traderx-base' exists and is accessible

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 138:[0m cub unit create --space ${PREFIX}-traderx-base reference-data k8s/reference-data.yaml || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates a new configuration unit '' in space ''
    Pre-condition: Space '' exists, unit '' does not exist
    Post-condition: Unit '' exists with provided configuration data

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 139:[0m cub unit create --space ${PREFIX}-traderx-base trade-service k8s/trade-service.yaml || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates a new configuration unit '' in space ''
    Pre-condition: Space '' exists, unit '' does not exist
    Post-condition: Unit '' exists with provided configuration data

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 144:[0m cub space create ${PREFIX}-traderx-prod-$region || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates a new ConfigHub space named '${PREFIX}-traderx-prod-$region'
    Pre-condition: Space '${PREFIX}-traderx-prod-$region' does not exist
    Post-condition: Space '${PREFIX}-traderx-prod-$region' exists and is accessible

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 147:[0m cub unit create reference-data  --space ${PREFIX}-traderx-prod-$region  --upstream-space ${PREFIX}-traderx-base  --upstream-unit reference-data || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates unit 'reference-data' in space '' with upstream relationship (clone pattern)
    Pre-condition: Space '' exists, upstream unit exists
    Post-condition: Unit 'reference-data' exists in '' with upstream link

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 152:[0m cub unit create trade-service  --space ${PREFIX}-traderx-prod-$region  --upstream-space ${PREFIX}-traderx-base  --upstream-unit trade-service || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates unit 'trade-service' in space '' with upstream relationship (clone pattern)
    Pre-condition: Space '' exists, upstream unit exists
    Post-condition: Unit 'trade-service' exists in '' with upstream link

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 160:[0m cub unit update trade-service  --space ${PREFIX}-traderx-prod-us --patch --from-stdin || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit 'trade-service' with patch operation
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit updated based on patch operation

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 162:[0m cub unit update trade-service  --space ${PREFIX}-traderx-prod-eu --patch --from-stdin || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit 'trade-service' with patch operation
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit updated based on patch operation

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 164:[0m cub unit update trade-service  --space ${PREFIX}-traderx-prod-asia --patch --from-stdin || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit 'trade-service' with patch operation
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit updated based on patch operation

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 179:[0m cub unit list --space '${PREFIX}-traderx-prod-eu' --where \"Data CONTAINS 'replicas: 5'\""

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause found

[1mCOMMON ERRORS CHECK:[0m
  [1;33m‚ö† Common errors found:[0m
  [1;33m  - CONTAINS not supported in WHERE clauses[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Lists all units in space ''
    Pre-condition: Space '' exists
    Post-condition: List of units returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 182:[0m cub run set-replicas --replicas 2 --space ${PREFIX}-traderx-prod-eu --where \"Data CONTAINS 'replicas: 5'\""

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid entity type: run[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause found

[1mCOMMON ERRORS CHECK:[0m
  [1;33m‚ö† Common errors found:[0m
  [1;33m  - CONTAINS not supported in WHERE clauses[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'set-replicas' operation on run ''

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 192:[0m cub changeset create market-data-v2"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates changeset 'market-data-v2"' for atomic multi-unit operations
    Pre-condition: Changeset 'market-data-v2"' does not exist
    Post-condition: Changeset exists, units can be locked to it

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 195:[0m cub unit update reference-data --space ${PREFIX}-traderx-prod-us --patch --from-stdin"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit 'reference-data' with patch operation
    Pre-condition: Unit 'reference-data' exists
    Post-condition: Unit updated based on patch operation

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 197:[0m cub unit update trade-service --space ${PREFIX}-traderx-prod-us --patch --from-stdin"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit 'trade-service' with patch operation
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit updated based on patch operation

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 199:[0m cub changeset apply market-data-v2"

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid verb 'apply' for entity 'changeset'. Valid: create get list update delete[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'apply' operation on changeset 'market-data-v2"'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 206:[0m cub space create ${PREFIX}-traderx-base || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates a new ConfigHub space named '${PREFIX}-traderx-base'
    Pre-condition: Space '${PREFIX}-traderx-base' does not exist
    Post-condition: Space '${PREFIX}-traderx-base' exists and is accessible

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 207:[0m cub unit create --space ${PREFIX}-traderx-base reference-data k8s/reference-data.yaml || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates a new configuration unit '' in space ''
    Pre-condition: Space '' exists, unit '' does not exist
    Post-condition: Unit '' exists with provided configuration data

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 208:[0m cub unit create --space ${PREFIX}-traderx-base trade-service k8s/trade-service.yaml || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates a new configuration unit '' in space ''
    Pre-condition: Space '' exists, unit '' does not exist
    Post-condition: Unit '' exists with provided configuration data

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 213:[0m cub space create ${PREFIX}-traderx-$env || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates a new ConfigHub space named '${PREFIX}-traderx-$env'
    Pre-condition: Space '${PREFIX}-traderx-$env' does not exist
    Post-condition: Space '${PREFIX}-traderx-$env' exists and is accessible

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 216:[0m cub unit create reference-data  --space ${PREFIX}-traderx-$env  --upstream-space ${PREFIX}-traderx-base  --upstream-unit reference-data || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates unit 'reference-data' in space '' with upstream relationship (clone pattern)
    Pre-condition: Space '' exists, upstream unit exists
    Post-condition: Unit 'reference-data' exists in '' with upstream link

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 221:[0m cub unit create trade-service  --space ${PREFIX}-traderx-$env  --upstream-space ${PREFIX}-traderx-base  --upstream-unit trade-service || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates unit 'trade-service' in space '' with upstream relationship (clone pattern)
    Pre-condition: Space '' exists, upstream unit exists
    Post-condition: Unit 'trade-service' exists in '' with upstream link

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 230:[0m cub space create ${PREFIX}-traderx-prod-$region || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates a new ConfigHub space named '${PREFIX}-traderx-prod-$region'
    Pre-condition: Space '${PREFIX}-traderx-prod-$region' does not exist
    Post-condition: Space '${PREFIX}-traderx-prod-$region' exists and is accessible

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 233:[0m cub unit create reference-data  --space ${PREFIX}-traderx-prod-$region  --upstream-space ${PREFIX}-traderx-base  --upstream-unit reference-data || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates unit 'reference-data' in space '' with upstream relationship (clone pattern)
    Pre-condition: Space '' exists, upstream unit exists
    Post-condition: Unit 'reference-data' exists in '' with upstream link

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 238:[0m cub unit create trade-service  --space ${PREFIX}-traderx-prod-$region  --upstream-space ${PREFIX}-traderx-base  --upstream-unit trade-service || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates unit 'trade-service' in space '' with upstream relationship (clone pattern)
    Pre-condition: Space '' exists, upstream unit exists
    Post-condition: Unit 'trade-service' exists in '' with upstream link

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 246:[0m cub unit update trade-service  --space ${PREFIX}-traderx-prod-us --patch --from-stdin || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit 'trade-service' with patch operation
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit updated based on patch operation

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 248:[0m cub unit update trade-service  --space ${PREFIX}-traderx-prod-eu --patch --from-stdin || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit 'trade-service' with patch operation
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit updated based on patch operation

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/setup-structure
[1mLINE 250:[0m cub unit update trade-service  --space ${PREFIX}-traderx-prod-asia --patch --from-stdin || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit 'trade-service' with patch operation
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit updated based on patch operation

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/bin/get-prefix[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

[1mFILE:[0m /Users/alexis/microtraderx/bin/get-prefix
[1mLINE 10:[0m cub space new-prefix)

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid verb 'new-prefix)' for entity 'space'. Valid: create get list update delete new-prefix[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'new-prefix)' operation on space ''

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/stages/stage6-atomic-updates.sh[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

[1mFILE:[0m /Users/alexis/microtraderx/stages/stage6-atomic-updates.sh
[1mLINE 23:[0m cub changeset create market-data-v2"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates changeset 'market-data-v2"' for atomic multi-unit operations
    Pre-condition: Changeset 'market-data-v2"' does not exist
    Post-condition: Changeset exists, units can be locked to it

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/stages/stage6-atomic-updates.sh
[1mLINE 26:[0m cub unit update reference-data --space traderx-prod-us \"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates configuration data for unit 'reference-data' in space '' (monolithic)
    Pre-condition: Unit 'reference-data' exists
    Post-condition: Unit data replaced with new configuration

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/stages/stage6-atomic-updates.sh
[1mLINE 29:[0m cub unit update trade-service --space traderx-prod-us \"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates configuration data for unit 'trade-service' in space '' (monolithic)
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit data replaced with new configuration

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/stages/stage6-atomic-updates.sh
[1mLINE 33:[0m cub changeset apply market-data-v2"

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid verb 'apply' for entity 'changeset'. Valid: create get list update delete[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'apply' operation on changeset 'market-data-v2"'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/stages/stage4-push-upgrade.sh[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

[1mFILE:[0m /Users/alexis/microtraderx/stages/stage4-push-upgrade.sh
[1mLINE 32:[0m cub unit update trade-service --space traderx-base \"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates configuration data for unit 'trade-service' in space '' (monolithic)
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit data replaced with new configuration

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/stages/stage4-push-upgrade.sh
[1mLINE 36:[0m cub unit update --upgrade --patch --space 'traderx-prod-*'"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit '' by propagating changes from upstream (push-upgrade pattern)
    Pre-condition: Unit '' has upstream unit with newer changes
    Post-condition: Unit '' updated to match upstream

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/stages/stage7-emergency-bypass.sh[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

[1mFILE:[0m /Users/alexis/microtraderx/stages/stage7-emergency-bypass.sh
[1mLINE 25:[0m cub run set-env-var --env-var CIRCUIT_BREAKER=true \"

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid entity type: run[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'set-env-var' operation on run ''

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/stages/stage7-emergency-bypass.sh
[1mLINE 29:[0m cub unit update trade-service --space traderx-prod-asia \"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates configuration data for unit 'trade-service' in space '' (monolithic)
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit data replaced with new configuration

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/stages/stage7-emergency-bypass.sh
[1mLINE 33:[0m cub unit update trade-service --space traderx-prod-us \"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates configuration data for unit 'trade-service' in space '' (monolithic)
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit data replaced with new configuration

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/stages/stage2-three-envs.sh[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/stages/stage1-hello-traderx.sh[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/stages/stage3-three-regions.sh[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/stages/stage5-find-and-fix.sh[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

[1mFILE:[0m /Users/alexis/microtraderx/stages/stage5-find-and-fix.sh
[1mLINE 18:[0m cub unit list --space 'traderx-prod-eu' \"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Lists all units in space ''
    Pre-condition: Space '' exists
    Post-condition: List of units returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/stages/stage5-find-and-fix.sh
[1mLINE 22:[0m cub run set-replicas --replicas 2 \"

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid entity type: run[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'set-replicas' operation on run ''

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/stages/stage5-find-and-fix.sh
[1mLINE 27:[0m cub unit list --space '*' \"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Lists all units in space ''
    Pre-condition: Space '' exists
    Post-condition: List of units returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/deploy[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 39:[0m cub worker list --space ${PREFIX}-traderx 2>/dev/null | grep -q $WORKER_NAME; then

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'list' operation on worker ''

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 41:[0m cub worker create $WORKER_NAME --space ${PREFIX}-traderx

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'create' operation on worker '$WORKER_NAME'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 46:[0m cub worker install $WORKER_NAME  --namespace confighub  --space ${PREFIX}-traderx  --include-secret  --export > /tmp/worker-manifest.yaml

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid verb 'install' for entity 'worker'. Valid: create get list update delete[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'install' operation on worker '$WORKER_NAME'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 59:[0m cub target list --space ${PREFIX}-traderx 2>/dev/null | grep -q "$TARGET_SLUG"; then

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'list' operation on target ''

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 76:[0m cub worker list --space ${PREFIX}-traderx"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'list' operation on worker ''

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 83:[0m cub unit set-target reference-data $TARGET_SLUG --space ${PREFIX}-traderx

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'set-target' operation on unit 'reference-data' in space ''

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 91:[0m cub unit apply reference-data --space ${PREFIX}-traderx

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Applies unit 'reference-data' to target infrastructure in space ''
    Pre-condition: Unit 'reference-data' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 109:[0m cub worker create worker --space ${PREFIX}-traderx-prod 2>/dev/null || echo "Worker already exists"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'create' operation on worker 'worker'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 110:[0m cub target create worker "{}" worker --space ${PREFIX}-traderx-prod 2>/dev/null || echo "Target already exists"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'create' operation on target 'worker'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 114:[0m cub worker install worker --space ${PREFIX}-traderx-prod --export 2>&1 |  sed 's|ghcr.io/confighubai/confighub-worker:latest|ghcr.io/confighubai/confighub-worker@sha256:704352a1082163aee749c90b05223f882d8bacfd6e14981112b0d9f07b1d6fd0|g' |  kubectl apply -f - >/dev/null 2>&1 || true

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid verb 'install' for entity 'worker'. Valid: create get list update delete[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'install' operation on worker 'worker'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 119:[0m cub unit set-target reference-data worker --space ${PREFIX}-traderx-prod || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'set-target' operation on unit 'reference-data' in space ''

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 120:[0m cub unit apply reference-data --space ${PREFIX}-traderx-prod

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Applies unit 'reference-data' to target infrastructure in space ''
    Pre-condition: Unit 'reference-data' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 131:[0m cub worker create worker-infra --space ${PREFIX}-traderx-infra 2>/dev/null || echo "Worker already exists"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'create' operation on worker 'worker-infra'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 132:[0m cub target create worker-infra "{}" worker-infra --space ${PREFIX}-traderx-infra 2>/dev/null || echo "Target already exists"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'create' operation on target 'worker-infra'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 135:[0m cub worker install worker-infra --namespace confighub --space ${PREFIX}-traderx-infra --include-secret --export 2>&1 |  kubectl apply -f - >/dev/null 2>&1 || true

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid verb 'install' for entity 'worker'. Valid: create get list update delete[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'install' operation on worker 'worker-infra'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 144:[0m cub unit set-target ns-$region k8s-worker-infra --space ${PREFIX}-traderx-infra || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'set-target' operation on unit 'ns-$region' in space ''

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 145:[0m cub unit apply ns-$region --space ${PREFIX}-traderx-infra || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Applies unit 'ns-$region' to target infrastructure in space ''
    Pre-condition: Unit 'ns-$region' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 153:[0m cub worker create worker-$region --space ${PREFIX}-traderx-prod-$region 2>/dev/null || echo "Worker already exists"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'create' operation on worker 'worker-$region'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 154:[0m cub target create worker-$region "{}" worker-$region --space ${PREFIX}-traderx-prod-$region 2>/dev/null || echo "Target already exists"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'create' operation on target 'worker-$region'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 157:[0m cub worker install worker-$region --namespace confighub --space ${PREFIX}-traderx-prod-$region --include-secret --export 2>&1 |  kubectl apply -f - >/dev/null 2>&1 || true

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid verb 'install' for entity 'worker'. Valid: create get list update delete[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'install' operation on worker 'worker-$region'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 164:[0m cub unit set-target reference-data k8s-worker-$region --space ${PREFIX}-traderx-prod-$region || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'set-target' operation on unit 'reference-data' in space ''

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 165:[0m cub unit set-target trade-service k8s-worker-$region --space ${PREFIX}-traderx-prod-$region || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'set-target' operation on unit 'trade-service' in space ''

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 167:[0m cub unit apply --space ${PREFIX}-traderx-prod-$region --unit reference-data,trade-service || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Applies unit '' to target infrastructure in space ''
    Pre-condition: Unit '' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 191:[0m cub worker create worker-$region --space ${PREFIX}-traderx-prod-$region 2>/dev/null || echo "Worker already exists"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'create' operation on worker 'worker-$region'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 192:[0m cub target create worker-$region "{}" worker-$region --space ${PREFIX}-traderx-prod-$region 2>/dev/null || echo "Target already exists"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'create' operation on target 'worker-$region'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 195:[0m cub worker install worker-$region --namespace confighub --space ${PREFIX}-traderx-prod-$region --include-secret --export 2>&1 |  sed 's|ghcr.io/confighubai/confighub-worker:latest|ghcr.io/confighubai/confighub-worker@sha256:704352a1082163aee749c90b05223f882d8bacfd6e14981112b0d9f07b1d6fd0|g' |  kubectl apply -f - >/dev/null 2>&1 || true

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid verb 'install' for entity 'worker'. Valid: create get list update delete[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'install' operation on worker 'worker-$region'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 203:[0m cub unit set-target worker-$region --space ${PREFIX}-traderx-prod-$region --where "Slug != ''" || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause found

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'set-target' operation on unit 'worker-$region' in space ''

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 204:[0m cub unit apply --space ${PREFIX}-traderx-prod-$region --where "Slug != ''"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause found

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Applies unit '' to target infrastructure in space ''
    Pre-condition: Unit '' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 211:[0m cub unit update trade-service --space ${PREFIX}-traderx-base --patch --from-stdin"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit 'trade-service' with patch operation
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit updated based on patch operation

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 214:[0m cub unit update --upgrade --patch --space 'traderx-prod-*'"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit '' by propagating changes from upstream (push-upgrade pattern)
    Pre-condition: Unit '' has upstream unit with newer changes
    Post-condition: Unit '' updated to match upstream

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 226:[0m cub run set-replicas --replicas 2 \"

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid entity type: run[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'set-replicas' operation on run ''

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 231:[0m cub unit list --space '*' \"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Lists all units in space ''
    Pre-condition: Space '' exists
    Post-condition: List of units returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 242:[0m cub changeset create market-data-v2"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Creates changeset 'market-data-v2"' for atomic multi-unit operations
    Pre-condition: Changeset 'market-data-v2"' does not exist
    Post-condition: Changeset exists, units can be locked to it

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 244:[0m cub unit update reference-data --space ${PREFIX}-traderx-prod-us --patch --from-stdin"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit 'reference-data' with patch operation
    Pre-condition: Unit 'reference-data' exists
    Post-condition: Unit updated based on patch operation

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 246:[0m cub unit update trade-service --space ${PREFIX}-traderx-prod-us --patch --from-stdin"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit 'trade-service' with patch operation
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit updated based on patch operation

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 247:[0m cub changeset apply market-data-v2  # Atomic!"

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid verb 'apply' for entity 'changeset'. Valid: create get list update delete[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'apply' operation on changeset 'market-data-v2'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 258:[0m cub worker create worker-$env --space ${PREFIX}-traderx-$env 2>/dev/null || echo "Worker already exists"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'create' operation on worker 'worker-$env'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 259:[0m cub target create worker-$env "{}" worker-$env --space ${PREFIX}-traderx-$env 2>/dev/null || echo "Target already exists"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'create' operation on target 'worker-$env'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 262:[0m cub worker install worker-$env --namespace confighub --space ${PREFIX}-traderx-$env --include-secret --export 2>&1 |  sed 's|ghcr.io/confighubai/confighub-worker:latest|ghcr.io/confighubai/confighub-worker@sha256:704352a1082163aee749c90b05223f882d8bacfd6e14981112b0d9f07b1d6fd0|g' |  kubectl apply -f - >/dev/null 2>&1 || true

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid verb 'install' for entity 'worker'. Valid: create get list update delete[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'install' operation on worker 'worker-$env'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 270:[0m cub unit set-target worker-$env --space ${PREFIX}-traderx-$env --where "Slug != ''" || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause found

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'set-target' operation on unit 'worker-$env' in space ''

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 271:[0m cub unit apply --space ${PREFIX}-traderx-$env --where "Slug != ''"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause found

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Applies unit '' to target infrastructure in space ''
    Pre-condition: Unit '' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 279:[0m cub worker create worker-$region --space ${PREFIX}-traderx-prod-$region 2>/dev/null || echo "Worker already exists"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'create' operation on worker 'worker-$region'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 280:[0m cub target create worker-$region "{}" worker-$region --space ${PREFIX}-traderx-prod-$region 2>/dev/null || echo "Target already exists"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'create' operation on target 'worker-$region'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 283:[0m cub worker install worker-$region --namespace confighub --space ${PREFIX}-traderx-prod-$region --include-secret --export 2>&1 |  sed 's|ghcr.io/confighubai/confighub-worker:latest|ghcr.io/confighubai/confighub-worker@sha256:704352a1082163aee749c90b05223f882d8bacfd6e14981112b0d9f07b1d6fd0|g' |  kubectl apply -f - >/dev/null 2>&1 || true

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid verb 'install' for entity 'worker'. Valid: create get list update delete[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'install' operation on worker 'worker-$region'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 291:[0m cub unit set-target worker-$region --space ${PREFIX}-traderx-prod-$region --where "Slug != ''" || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause found

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'set-target' operation on unit 'worker-$region' in space ''

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 292:[0m cub unit apply --space ${PREFIX}-traderx-prod-$region --where "Slug != ''"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause found

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Applies unit '' to target infrastructure in space ''
    Pre-condition: Unit '' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 306:[0m cub run set-env-var --env-var CIRCUIT_BREAKER=true \"

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid entity type: run[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'set-env-var' operation on run ''

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/deploy
[1mLINE 308:[0m cub unit update trade-service --space ${PREFIX}-traderx-prod-asia \"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates configuration data for unit 'trade-service' in space '' (monolithic)
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit data replaced with new configuration

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/bulk-operations[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

[1mFILE:[0m /Users/alexis/microtraderx/bulk-operations
[1mLINE 33:[0m cub unit update trade-service --space $PROJECT-base \"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates configuration data for unit 'trade-service' in space '' (monolithic)
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit data replaced with new configuration

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/bulk-operations
[1mLINE 35:[0m cub unit apply trade-service --space $PROJECT-base"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Applies unit 'trade-service' to target infrastructure in space ''
    Pre-condition: Unit 'trade-service' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/bulk-operations
[1mLINE 40:[0m cub unit list --space $PROJECT-base 2>/dev/null | grep -q trade-service; then

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Lists all units in space ''
    Pre-condition: Space '' exists
    Post-condition: List of units returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/bulk-operations
[1mLINE 41:[0m cub unit update trade-service --space $PROJECT-base  --patch "{\"spec\":{\"replicas\":$VALUE}}" || true

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: --patch requires one of: --from-stdin, --filename, --restore, --upgrade, --merge-source, --label, --delete-gate, --destroy-gate, or --changeset[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [1;33m‚ö† Common errors found:[0m
  [1;33m  - --patch requires additional flags[0m
  [1;33m  - Inline JSON with --patch is invalid. Use --from-stdin (with pipe) or use 'cub function do' for fine-grained changes[0m

  [0;34müí° CORRECTION:[0m
    For monolithic Data update:
      echo '{...}' | cub unit update <unit> --from-stdin --space <space>
    For fine-grained Data update:
      cub function do --space <space> --where "Slug = '<unit>'" set-replicas 3

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit 'trade-service' with patch operation
    Pre-condition: Unit 'trade-service' exists
    Post-condition: Unit updated based on patch operation

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/bulk-operations
[1mLINE 43:[0m cub unit apply trade-service --space $PROJECT-base || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Applies unit 'trade-service' to target infrastructure in space ''
    Pre-condition: Unit 'trade-service' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/bulk-operations
[1mLINE 58:[0m cub unit list --space '*' --where \"Slug = 'trade-service' AND Space.Slug LIKE '%prod%'\""

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause found

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Lists all units in space ''
    Pre-condition: Space '' exists
    Post-condition: List of units returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/bulk-operations
[1mLINE 61:[0m cub unit list --space '*' --where "Slug = 'trade-service' AND Space.Slug LIKE '%prod%'" 2>/dev/null | tail -n +2 | wc -l || echo "0")

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause found

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Lists all units in space ''
    Pre-condition: Space '' exists
    Post-condition: List of units returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/bulk-operations
[1mLINE 67:[0m cub unit list --where '...' --space '*'"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause found

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Lists all units in space ''
    Pre-condition: Space '' exists
    Post-condition: List of units returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/bulk-operations
[1mLINE 68:[0m cub unit update --where '...' --space '*' --patch '...'"

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: --patch requires one of: --from-stdin, --filename, --restore, --upgrade, --merge-source, --label, --delete-gate, --destroy-gate, or --changeset[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause found

[1mCOMMON ERRORS CHECK:[0m
  [1;33m‚ö† Common errors found:[0m
  [1;33m  - --patch requires additional flags[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit '' with patch operation
    Pre-condition: Unit '' exists
    Post-condition: Unit updated based on patch operation

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/bulk-operations
[1mLINE 69:[0m cub unit apply --where '...' --space '*'"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause found

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Applies unit '' to target infrastructure in space ''
    Pre-condition: Unit '' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/bulk-operations
[1mLINE 78:[0m cub unit update --space '*' --where \"Slug = 'trade-service' AND Space.Slug LIKE '%prod%'\" --patch '{\"spec\":{\"replicas\":$VALUE}}'"

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: --patch requires one of: --from-stdin, --filename, --restore, --upgrade, --merge-source, --label, --delete-gate, --destroy-gate, or --changeset[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause found

[1mCOMMON ERRORS CHECK:[0m
  [1;33m‚ö† Common errors found:[0m
  [1;33m  - --patch requires additional flags[0m
  [1;33m  - Inline JSON with --patch is invalid. Use --from-stdin (with pipe) or use 'cub function do' for fine-grained changes[0m

  [0;34müí° CORRECTION:[0m
    For monolithic Data update:
      echo '{...}' | cub unit update <unit> --from-stdin --space <space>
    For fine-grained Data update:
      cub function do --space <space> --where "Slug = '<unit>'" set-replicas 3

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit '' with patch operation
    Pre-condition: Unit '' exists
    Post-condition: Unit updated based on patch operation

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/bulk-operations
[1mLINE 81:[0m cub unit update --space '*'  --where "Slug = 'trade-service' AND Space.Slug LIKE '%prod%'"  --patch "{\"spec\":{\"replicas\":$VALUE}}" 2>/dev/null || true

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: --patch requires one of: --from-stdin, --filename, --restore, --upgrade, --merge-source, --label, --delete-gate, --destroy-gate, or --changeset[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause found

[1mCOMMON ERRORS CHECK:[0m
  [1;33m‚ö† Common errors found:[0m
  [1;33m  - --patch requires additional flags[0m
  [1;33m  - Inline JSON with --patch is invalid. Use --from-stdin (with pipe) or use 'cub function do' for fine-grained changes[0m

  [0;34müí° CORRECTION:[0m
    For monolithic Data update:
      echo '{...}' | cub unit update <unit> --from-stdin --space <space>
    For fine-grained Data update:
      cub function do --space <space> --where "Slug = '<unit>'" set-replicas 3

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit '' with patch operation
    Pre-condition: Unit '' exists
    Post-condition: Unit updated based on patch operation

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/bulk-operations
[1mLINE 90:[0m cub unit apply --space '*' --where \"Slug = 'trade-service' AND Space.Slug LIKE '%prod%'\""

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause found

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Applies unit '' to target infrastructure in space ''
    Pre-condition: Unit '' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/bulk-operations
[1mLINE 93:[0m cub unit apply --space '*'  --where "Slug = 'trade-service' AND Space.Slug LIKE '%prod%'" 2>/dev/null || true

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause found

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Applies unit '' to target infrastructure in space ''
    Pre-condition: Unit '' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/bulk-operations
[1mLINE 112:[0m cub run set-image-reference --container-name trade-service \"

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid entity type: run[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'set-image-reference' operation on run ''

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/bulk-operations
[1mLINE 115:[0m cub run commands auto-apply (unlike unit update)"

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid entity type: run[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'commands' operation on run 'auto-apply'

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/bulk-operations
[1mLINE 128:[0m cub run set-image-reference --container-name trade-service \"

[1mSYNTAX VALIDATION:[0m
  [0;31m‚úó Invalid[0m
  [0;31m  Error: Invalid entity type: run[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Performs 'set-image-reference' operation on run ''

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/bulk-operations
[1mLINE 132:[0m cub unit update --upgrade --patch --space '$PROJECT-prod-*'"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Updates unit '' by propagating changes from upstream (push-upgrade pattern)
    Pre-condition: Unit '' has upstream unit with newer changes
    Post-condition: Unit '' updated to match upstream

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/bulk-operations
[1mLINE 133:[0m cub unit apply --space '$PROJECT-prod-*' --where \\"Slug != ''\\""

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause found

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Applies unit '' to target infrastructure in space ''
    Pre-condition: Unit '' exists, target configured, worker running
    Post-condition: Configuration deployed to Kubernetes/cloud

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/bulk-operations
[1mLINE 144:[0m cub space list | grep "$PROJECT" | awk '{print $1}' || echo "$PROJECT-base")

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Lists all ConfigHub spaces accessible to the user
    Pre-condition: User is authenticated
    Post-condition: List of spaces returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

[1mFILE:[0m /Users/alexis/microtraderx/bulk-operations
[1mLINE 148:[0m cub unit list --space "$space" 2>/dev/null | head -10 || echo "  No units yet"

[1mSYNTAX VALIDATION:[0m
  [0;32m‚úì Valid[0m

[1mGRAMMAR VALIDATION:[0m
  ‚äò No WHERE clause (N/A)

[1mCOMMON ERRORS CHECK:[0m
  [0;32m‚úì No common errors detected[0m

[1mSEMANTIC EXPLANATION:[0m
  [0;34müìù[0m Lists all units in space ''
    Pre-condition: Space '' exists
    Post-condition: List of units returned

‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/preview-docs.sh[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/.git/hooks/commit-msg.sample[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/.git/hooks/pre-rebase.sample[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/.git/hooks/pre-commit.sample[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/.git/hooks/applypatch-msg.sample[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/.git/hooks/fsmonitor-watchman.sample[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/.git/hooks/pre-receive.sample[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/.git/hooks/prepare-commit-msg.sample[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/.git/hooks/post-update.sample[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/.git/hooks/pre-merge-commit.sample[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/.git/hooks/pre-applypatch.sample[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/.git/hooks/pre-push.sample[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/.git/hooks/update.sample[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/.git/hooks/push-to-checkout.sample[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1m[4mAnalyzing: /Users/alexis/microtraderx/test-confighub-k8s[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
[1mANALYSIS SUMMARY[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
Files analyzed:       30
Commands found:       177
[0;32mValid commands:       140[0m
[0;31mInvalid commands:     37[0m
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê

[1;33m‚ö† Found 37 invalid command(s). See details above.[0m
